{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nexport let ContentComponent = class ContentComponent {\n  constructor() {\n    this.title = '';\n    this.items = [{\n      image: './assets/images/blender.svg',\n      alt: 'Logo 1'\n    }, {\n      image: './assets/images/unity.svg',\n      alt: 'Logo 2'\n    }, {\n      image: './assets/images/nvidia.svg',\n      alt: 'Logo 3'\n    }, {\n      image: './assets/images/pytorch.svg',\n      alt: 'Logo 4'\n    }, {\n      image: '/assets/images/tensorflow.svg',\n      alt: 'Logo 5'\n    }, {\n      image: '/assets/images/pandas.svg',\n      alt: 'Logo 6'\n    }, {\n      image: '/assets/images/opengl.svg',\n      alt: 'Logo 7'\n    }, {\n      image: '/assets/images/numpy.svg',\n      alt: 'Logo 8'\n    }, {\n      image: '/assets/images/matlab.svg',\n      alt: 'Logo 9'\n    }];\n    this.currentIndex = 0;\n    this.transitionEnabled = true;\n  }\n  ngOnInit() {\n    this.startAutoSlide();\n  }\n  startAutoSlide() {\n    setInterval(() => {\n      if (this.currentIndex === this.items.length) {\n        // Reiniciar sin transición\n        this.transitionEnabled = false;\n        this.currentIndex = 0;\n        // Asegurarse de que la transición vuelva a habilitarse después de un ciclo\n        setTimeout(() => {\n          this.transitionEnabled = true;\n        }, 50); // Breve retraso para evitar el parpadeo\n      } else {\n        this.transitionEnabled = true;\n        this.currentIndex++;\n      }\n    }, 3000); // Cambiar de slide cada 3 segundos\n  }\n};\n\n__decorate([Input()], ContentComponent.prototype, \"title\", void 0);\nContentComponent = __decorate([Component({\n  selector: 'app-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.css']\n})], ContentComponent);","map":{"version":3,"names":["Component","Input","ContentComponent","constructor","title","items","image","alt","currentIndex","transitionEnabled","ngOnInit","startAutoSlide","setInterval","length","setTimeout","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/appleuser/Desktop/bordeaux/ManagementIT/Project/Frontend/dashboard-v5/src/app/components/content/content.component.ts"],"sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.css'],\n})\nexport class ContentComponent implements OnInit {\n  @Input() title: string = '';\n\n  items = [\n    { image: './assets/images/blender.svg', alt: 'Logo 1' },\n    { image: './assets/images/unity.svg', alt: 'Logo 2' },\n    { image: './assets/images/nvidia.svg', alt: 'Logo 3' },\n    { image: './assets/images/pytorch.svg', alt: 'Logo 4' },\n    { image: '/assets/images/tensorflow.svg', alt: 'Logo 5' },\n    { image: '/assets/images/pandas.svg', alt: 'Logo 6' },\n    { image: '/assets/images/opengl.svg', alt: 'Logo 7' },\n    { image: '/assets/images/numpy.svg', alt: 'Logo 8' },\n    { image: '/assets/images/matlab.svg', alt: 'Logo 9' },\n  ];\n\n  currentIndex = 0;\n  transitionEnabled = true;\n\n  ngOnInit(): void {\n    this.startAutoSlide();\n  }\n\n  startAutoSlide(): void {\n    setInterval(() => {\n      if (this.currentIndex === this.items.length) {\n        // Reiniciar sin transición\n        this.transitionEnabled = false;\n        this.currentIndex = 0;\n\n        // Asegurarse de que la transición vuelva a habilitarse después de un ciclo\n        setTimeout(() => {\n          this.transitionEnabled = true;\n        }, 50); // Breve retraso para evitar el parpadeo\n      } else {\n        this.transitionEnabled = true;\n        this.currentIndex++;\n      }\n    }, 3000); // Cambiar de slide cada 3 segundos\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAUC,KAAK,QAAQ,eAAe;AAOjD,WAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAAtBC,YAAA;IACI,KAAAC,KAAK,GAAW,EAAE;IAE3B,KAAAC,KAAK,GAAG,CACN;MAAEC,KAAK,EAAE,6BAA6B;MAAEC,GAAG,EAAE;IAAQ,CAAE,EACvD;MAAED,KAAK,EAAE,2BAA2B;MAAEC,GAAG,EAAE;IAAQ,CAAE,EACrD;MAAED,KAAK,EAAE,4BAA4B;MAAEC,GAAG,EAAE;IAAQ,CAAE,EACtD;MAAED,KAAK,EAAE,6BAA6B;MAAEC,GAAG,EAAE;IAAQ,CAAE,EACvD;MAAED,KAAK,EAAE,+BAA+B;MAAEC,GAAG,EAAE;IAAQ,CAAE,EACzD;MAAED,KAAK,EAAE,2BAA2B;MAAEC,GAAG,EAAE;IAAQ,CAAE,EACrD;MAAED,KAAK,EAAE,2BAA2B;MAAEC,GAAG,EAAE;IAAQ,CAAE,EACrD;MAAED,KAAK,EAAE,0BAA0B;MAAEC,GAAG,EAAE;IAAQ,CAAE,EACpD;MAAED,KAAK,EAAE,2BAA2B;MAAEC,GAAG,EAAE;IAAQ,CAAE,CACtD;IAED,KAAAC,YAAY,GAAG,CAAC;IAChB,KAAAC,iBAAiB,GAAG,IAAI;EAuB1B;EArBEC,QAAQA,CAAA;IACN,IAAI,CAACC,cAAc,EAAE;EACvB;EAEAA,cAAcA,CAAA;IACZC,WAAW,CAAC,MAAK;MACf,IAAI,IAAI,CAACJ,YAAY,KAAK,IAAI,CAACH,KAAK,CAACQ,MAAM,EAAE;QAC3C;QACA,IAAI,CAACJ,iBAAiB,GAAG,KAAK;QAC9B,IAAI,CAACD,YAAY,GAAG,CAAC;QAErB;QACAM,UAAU,CAAC,MAAK;UACd,IAAI,CAACL,iBAAiB,GAAG,IAAI;QAC/B,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;OACT,MAAM;QACL,IAAI,CAACA,iBAAiB,GAAG,IAAI;QAC7B,IAAI,CAACD,YAAY,EAAE;;IAEvB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EACZ;CACD;;AAtCUO,UAAA,EAARd,KAAK,EAAE,C,8CAAoB;AADjBC,gBAAgB,GAAAa,UAAA,EAL5Bf,SAAS,CAAC;EACTgB,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EACWhB,gBAAgB,CAuC5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}